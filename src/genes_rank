#!/usr/bin/env python

from __future__ import print_function, division
import sys
import itertools as it

import parser
import dataset
import thresholds
import hclust
import vecspace

try: range = xrange
except: pass

def main (argv=None):
    if not argv: argv = sys.argv

    if len(argv) < 3:
        print("Usage: {0} <dataset> <output file>".format(argv[0]),
              file=sys.stderr)
        return 1;

    try:
        f = open(argv[1], "rt")
        out = open(argv[2], "wt")
        problem = parser.run(f, dataset.ProblemStructure)
        thrs = sorted( thresholds.run(problem),
                       key=lambda (i, (th, ig)) : ig )
        fmt = "Gene {0} : {1} {2}"
        print(*(fmt.format(i, th, ig) for (i, (th, ig)) in thrs),
              sep='\n', file=out)
    except KeyboardInterrupt:
        print("Interrupted. BYE!", file=sys.stderr)
        return 1
    except Exception as e:
        print("Error:", e)
    finally:
        f.close()
        out.close()

    return 0

if __name__ == "__main__":
    sys.exit(main())

